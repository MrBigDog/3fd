/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ACMETESTING_H_RPCGEN
#define _ACMETESTING_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MATH_INPUT_ARRAY_SIZE 32

struct SumInput {
	struct {
		u_int parcels_len;
		double *parcels_val;
	} parcels;
};
typedef struct SumInput SumInput;

struct MultiplyInput {
	struct {
		u_int factors_len;
		double *factors_val;
	} factors;
};
typedef struct MultiplyInput MultiplyInput;



#define ACME_TESTING_PROGRAM 0x532d
#define ACME_TESTING_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define SUM 1
extern  double * sum_1(SumInput *, CLIENT *);
extern  double * sum_1_svc(SumInput *, struct svc_req *);
#define MULTIPLY 2
extern  double * multiply_1(MultiplyInput *, CLIENT *);
extern  double * multiply_1_svc(MultiplyInput *, struct svc_req *);
#define TOUPPER 3
extern  char ** toupper_1(char **, CLIENT *);
extern  char ** toupper_1_svc(char **, struct svc_req *);
extern int acme_testing_program_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SUM 1
extern  double * sum_1();
extern  double * sum_1_svc();
#define MULTIPLY 2
extern  double * multiply_1();
extern  double * multiply_1_svc();
#define TOUPPER 3
extern  char ** toupper_1();
extern  char ** toupper_1_svc();
extern int acme_testing_program_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_SumInput (XDR *, SumInput*);
extern  bool_t xdr_MultiplyInput (XDR *, MultiplyInput*);
extern  bool_t xdr_SumInput (XDR *, SumInput*);
extern  bool_t xdr_MultiplyInput (XDR *, MultiplyInput*);

#else /* K&R C */
extern bool_t xdr_SumInput ();
extern bool_t xdr_MultiplyInput ();
extern bool_t xdr_SumInput ();
extern bool_t xdr_MultiplyInput ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_ACMETESTING_H_RPCGEN */
